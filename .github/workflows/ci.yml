name: Continous Integration

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Recursively checkout all dependencies
      - name: Checkout project sources
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Installation of compiler tools for linux
      - name: Install compiler tools
        run: |
          sudo apt-get update
          sudo apt-get install cmake openjdk-11-jdk g++ mingw-w64-x86-64-dev mingw-w64-tools g++-mingw-w64-x86-64
      - name: Compile JCDD for Linux
        run: |
          cd JCDD && mkdir build
          ./getlibs.sh
          cmake -B build/
          cmake --build build/

      # Alternative tools for windows compilation
      - name: Compile JCDD for Windows
        run: |
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          cd JCDD && mkdir build-win
          ./getlibs-win.sh
          cmake -B build-win/ -DCMAKE_TOOLCHAIN_FILE=./toolchain-x86_64-w64-mingw32.cmake
          cmake --build build-win/

      # Uploads build artifacts
      - name: Upload JCDD Linux
        uses: actions/upload-artifact@v2
        with:
          name: jcdd-linux
          path: JCDD/build/jcdd/lib/*
      - name: Upload JCDD Windows
        uses: actions/upload-artifact@v2
        with:
          name: jcdd-windows
          path: JCDD/build-win/jcdd/lib/*

      # Copies the jcdd.jar and libJCDD.so for extraction
      - name: Copy jcdd.jar to lib folder
        run: cp -a ./JCDD/build/jcdd/lib/ ./lib

      # Gradle setup with caching
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Runs build and uploads scan
      - name: Run build with Gradle
        run: ./gradlew build --scan
      - name: Upload build reports
        if: always() # Even if the build/tests fails, then we want the results
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/